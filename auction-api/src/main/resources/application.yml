spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
  flyway:
    enabled: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            scope:
              - openid
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/facebook
            scope:
              - email
              - public_profile

jwt:
  secret: mySecretKeyForJWTWhichShouldBeAtLeast256BitsLong
  expiration: 86400000  # 24 hours
  refreshExpiration: 604800000  # 7 days

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when_authorized
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

otel:
  service:
    name: auction-api
  traces:
    exporter: jaeger
    sampler: parentbased_always_on
    sampler.arg: 0.1
  exporter:
    jaeger:
      endpoint: http://localhost:14268/api/traces