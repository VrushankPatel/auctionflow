apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "auction-api.fullname" . }}-config
  labels:
    {{- include "auction-api.labels" . | nindent 4 }}
data:
  application.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://{{ .Values.postgresql.host | default "postgres-primary" }}:{{ .Values.postgresql.port | default 5432 }}/{{ .Values.postgresql.database | default "auctiondb" }}
        username: {{ .Values.postgresql.username | default "auctionuser" }}
        password: {{ .Values.postgresql.password | default "auctionpass" }}
        driver-class-name: org.postgresql.Driver
      data:
        redis:
          host: {{ .Values.redis.host | default "redis-1" }}
          port: {{ .Values.redis.port | default 6379 }}
          password: {{ .Values.redis.password | default "" }}
          cluster:
            nodes: {{ .Values.redis.clusterNodes | default "redis-1:6379,redis-2:6379" }}
      kafka:
        bootstrap-servers: {{ .Values.kafka.bootstrapServers | default "kafka-1:9092" }}
        producer:
          acks: all
          retries: 3
        consumer:
          group-id: auction-api
          auto-offset-reset: earliest
      security:
        oauth2:
          client:
            registration:
              google:
                client-id: ${GOOGLE_CLIENT_ID}
                client-secret: ${GOOGLE_CLIENT_SECRET}
                redirect-uri: http://localhost:8080/login/oauth2/code/google
                scope:
                  - openid
                  - email
                  - profile
              facebook:
                client-id: ${FACEBOOK_CLIENT_ID}
                client-secret: ${FACEBOOK_CLIENT_SECRET}
                redirect-uri: http://localhost:8080/login/oauth2/code/facebook
                scope:
                  - email
                  - public_profile
    jwt:
      secret: ${JWT_SECRET}
      expiration: 86400000
      refreshExpiration: 604800000
    management:
      endpoints:
        web:
          exposure:
          include: health,prometheus
      endpoint:
        health:
          probes:
            enabled: true
          show-details: when_authorized
      health:
        readiness-state:
          enabled: true
        liveness-state:
          enabled: true
      metrics:
        export:
          prometheus:
            enabled: true
    otel:
      service:
        name: auction-api
      traces:
        exporter: jaeger
        sampler: parentbased_always_on
        sampler.arg: 0.1
      exporter:
        jaeger:
          endpoint: http://localhost:14268/api/traces